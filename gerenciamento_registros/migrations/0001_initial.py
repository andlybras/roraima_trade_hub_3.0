# Generated by Django 5.2.6 on 2025-09-08 00:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('PERMISSIONARIO', 'Permissionário (Equipe Interna)'), ('EMPRESA_EMPREENDEDOR', 'Empresa ou Empreendedor'), ('APRENDIZ', 'Aprendiz (Aprenda Comex)')], default='EMPRESA_EMPREENDEDOR', max_length=20, verbose_name='Tipo de Usuário')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='E-mail verificado')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ModeloEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificador', models.SlugField(help_text="Um nome curto, sem espaços ou caracteres especiais (ex: 'ativacao-conta', 'reset-senha'). Usado internamente pelo sistema.", max_length=100, unique=True, verbose_name='Identificador Único')),
                ('assunto', models.CharField(max_length=200, verbose_name='Assunto do E-mail')),
                ('corpo', tinymce.models.HTMLField(help_text='O conteúdo do e-mail. Você pode usar variáveis como {{ user.username }}, {{ link_ativacao }}, etc., que serão substituídas dinamicamente.', verbose_name='Corpo do E-mail')),
            ],
            options={
                'verbose_name': 'Modelo de E-mail',
                'verbose_name_plural': '4. Central de Comunicação (Modelos de E-mail)',
            },
        ),
        migrations.CreateModel(
            name='AprendizProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='aprendiz_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('cpf', models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('residencia', models.CharField(max_length=100, verbose_name='Estado/País de Residência')),
                ('nivel_conhecimento_comex', models.CharField(choices=[('INICIANTE', 'Iniciante (Nunca estudei/trabalhei com Comex)'), ('INTERMEDIARIO', 'Intermediário (Já tive algum contato ou estudei o básico)'), ('AVANCADO', 'Avançado (Trabalho ou tenho conhecimento sólido na área)')], max_length=20, verbose_name='Nível de conhecimento em Comércio Exterior')),
            ],
            options={
                'verbose_name': 'Perfil de Aprendiz',
                'verbose_name_plural': 'Perfis de Aprendizes',
            },
        ),
        migrations.CreateModel(
            name='PermissionarioProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='permissionario_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('orgao_lotacao', models.CharField(max_length=255, verbose_name='Órgão/Lotação')),
            ],
            options={
                'verbose_name': 'Perfil de Permissionário',
                'verbose_name_plural': 'Perfis de Permissionários',
            },
        ),
    ]
